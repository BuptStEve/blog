(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{350:function(s,t,a){"use strict";a.r(t);var e=a(13),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"怎么使用组件库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#怎么使用组件库"}},[s._v("#")]),s._v(" 怎么使用组件库？")]),s._v(" "),a("p",[s._v("作为一个开发者，通常会用如下方式使用组件库。")]),s._v(" "),a("h3",{attrs:{id:"_1-使用-script-标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用-script-标签"}},[s._v("#")]),s._v(" 1. 使用 "),a("code",[s._v("<script>")]),s._v(" 标签")]),s._v(" "),a("p",[s._v("即直接在 html 页面中，使用既传统又新潮（module）的 "),a("code",[s._v("<script>")]),s._v(" 标签，来引入组件库代码。")]),s._v(" "),a("h3",{attrs:{id:"_2-借助构建工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-借助构建工具"}},[s._v("#")]),s._v(" 2. 借助构建工具")]),s._v(" "),a("p",[s._v("大部分情况下，前端项目还是基于 "),a("code",[s._v("npm")]),s._v(" 安装组件库的包，之后再借助 webpack、vite 或其他构建工具使用组件库。\n（当然你也可以不用 npm，直接复制粘贴一把梭~）")]),s._v(" "),a("blockquote",[a("p",[s._v("所以一个组件库应该构建出什么产物呢？")])]),s._v(" "),a("h2",{attrs:{id:"有什么构建产物"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有什么构建产物"}},[s._v("#")]),s._v(" 有什么构建产物？")]),s._v(" "),a("p",[s._v("构建产物当然就是 js + css，以及类型声明的 d.ts 文件，但是这些文件的具体格式和组合则有些讲究~")]),s._v(" "),a("h3",{attrs:{id:"_1-umd-css-css-vars-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-umd-css-css-vars-变量"}},[s._v("#")]),s._v(" 1. umd + css + "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Using_CSS_custom_properties",target:"_blank",rel:"noopener noreferrer"}},[s._v("css vars（变量）"),a("OutboundLink")],1)]),s._v(" "),a("blockquote",[a("p",[s._v("适用于直接使用 "),a("code",[s._v("<script>")]),s._v(" 标签的场景。")])]),s._v(" "),a("p",[s._v("最基础最简单的产物格式，即产出一个 "),a("a",{attrs:{href:"https://github.com/umdjs/umd",target:"_blank",rel:"noopener noreferrer"}},[s._v("UMD (Universal Module Definition)"),a("OutboundLink")],1),s._v(" 格式的 js 代码文件，平平无奇的样式文件。\n由于这样使用不经过构建工具处理，所以还需要产出对应的"),a("strong",[s._v("压缩文件")]),s._v("。\n这里的样式文件产物可以有两种：")]),s._v(" "),a("ul",[a("li",[s._v("css files（钦定的 css）")]),s._v(" "),a("li",[s._v("css vars files（使用 css 变量的 css 文件，方便自定义主题）。")])]),s._v(" "),a("p",[s._v("总结：")]),s._v(" "),a("ul",[a("li",[s._v("优点：兼容性好，无论是 cdn 直接引用，还是作为 npm 包通过构建工具使用皆可。")]),s._v(" "),a("li",[s._v("缺点：代码体积大，无论组件库中有没有被用到代码，通通被引入。可能引起页面性能问题，尤其是在移动端使用。")])]),s._v(" "),a("p",[s._v("举个使用 umd 产物，在页面上输出 vue 版本号的例子：")]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("https://unpkg.com/vue/dist/vue.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n​\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[s._v("\n  document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("textContent "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Vue version '")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Vue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("version"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"_2-esm-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-esm-files"}},[s._v("#")]),s._v(" 2. esm files")]),s._v(" "),a("blockquote",[a("p",[s._v("适用于使用构建工具的场景。一般不需要输出压缩代码。")])]),s._v(" "),a("p",[s._v("在不使用插件的情况下，要想使用 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Tree_shaking",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[s._v("tree-shaking")]),a("OutboundLink")],1),s._v(" 来减少打包代码的体积，首要前提必须是 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Modules",target:"_blank",rel:"noopener noreferrer"}},[s._v("esm"),a("OutboundLink")],1),s._v(" 格式的源代码。")]),s._v(" "),a("p",[s._v("在这种情况下各个组件都会构建出 esm 格式的 js，并在入口文件中"),a("strong",[s._v("统一导出")]),s._v("。")]),s._v(" "),a("p",[s._v("这样在使用组件库时，可以直接 import 用到的组件，随后在打包时会自动将没有用到的组件代码“摇掉”（后文会详细说明）。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打包时只会引入 Button 相关代码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Button "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo-ui'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"样式构建产物"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样式构建产物"}},[s._v("#")]),s._v(" 样式构建产物")]),s._v(" "),a("ul",[a("li",[s._v("a. css files")]),s._v(" "),a("li",[s._v("b. css vars files")]),s._v(" "),a("li",[s._v("c. less(scss/stylus) files")])]),s._v(" "),a("p",[s._v("输出 css 类型的样式，是为了方便直接使用。\n若是有其他需求，那么 css vars 和 less 等预编译类型的样式文件可以用于自定义样式。")]),s._v(" "),a("h3",{attrs:{id:"_3-esm-browser-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-esm-browser-files"}},[s._v("#")]),s._v(" 3. esm browser files")]),s._v(" "),a("blockquote",[a("p",[s._v("适用于直接使用 "),a("code",[s._v("<script>")]),s._v(" 标签的场景。")])]),s._v(" "),a("h4",{attrs:{id:"样式构建产物-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样式构建产物-2"}},[s._v("#")]),s._v(" 样式构建产物")]),s._v(" "),a("ul",[a("li",[s._v("a. css files")]),s._v(" "),a("li",[s._v("b. css vars files")])]),s._v(" "),a("p",[s._v("与前一种构建产物类似，但适用于直接在浏览器端使用 "),a("code",[s._v("module")]),s._v(" 类型的 "),a("code",[s._v("<script>")]),s._v(" 标签引入代码。")]),s._v(" "),a("p",[s._v("但与 esm 格式不同的地方在于，构建出的代码需要"),a("strong",[s._v("包含所有依赖包的代码")]),s._v("，而 esm 格式的构建产物不用，那些组件库的依赖只需要直接 import 即可。")]),s._v(" "),a("p",[s._v("esm browser 模式有一个缺点是"),a("strong",[s._v("兼容性不好")]),s._v("。")]),s._v(" "),a("img",{attrs:{src:s.$withBase("/imgs/ui-lib/lol.jpg"),width:"100",alt:"lol"}}),s._v(" "),a("p",[s._v("但它也有一个优点就是，正因为"),a("strong",[s._v("兼容性不好")]),s._v("，所以构建时 babel 可以不用将代码转换地兼容性太好。（笑死")]),s._v(" "),a("img",{attrs:{src:s.$withBase("/imgs/ui-lib/js-modules-via-script-tag.jpg"),alt:"js-modules-via-script-tag"}}),s._v(" "),a("p",[s._v("兼容性不好这个问题还好，例如一些用于展示 demo 类的页面，或者面向用户都是开发者，那么这个问题就可以绕过去。")]),s._v(" "),a("h3",{attrs:{id:"_4-cjs-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-cjs-files"}},[s._v("#")]),s._v(" 4. cjs files")]),s._v(" "),a("blockquote",[a("p",[s._v("适用于不支持 esm 格式的服务端渲染场景。")])]),s._v(" "),a("p",[s._v("但随着 Node.js 的版本升级，对于 esm 格式的支持越来越好，之后将渐渐淘汰 "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/CommonJS",target:"_blank",rel:"noopener noreferrer"}},[s._v("cjs"),a("OutboundLink")],1),s._v(" 格式的构建产物。")]),s._v(" "),a("blockquote",[a("p",[s._v("2017-09-12，Node.js 8.5.0 发布了对ECMAScript模块的实验性支持。这种ECMAScript模块的支持是需要在后面加上 --experimental-modules 标识来运行。\n"),a("a",{attrs:{href:"https://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_V8.md#2017-09-12-version-850-current-mylesborins",target:"_blank",rel:"noopener noreferrer"}},[s._v("Node.js CHANGELOG_V8"),a("OutboundLink")],1)])]),s._v(" "),a("blockquote",[a("p",[s._v("2019-11-21，Node.js 13.2.0 起开始正式支持 ES Modules 特性。移除了 --experimental-modules 启动参数。\n"),a("a",{attrs:{href:"https://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_V13.md#2019-11-21-version-1320-current-mylesborins",target:"_blank",rel:"noopener noreferrer"}},[s._v("Node.js CHANGELOG_V13"),a("OutboundLink")],1)])]),s._v(" "),a("h3",{attrs:{id:"_5-类型声明文件-d-ts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-类型声明文件-d-ts"}},[s._v("#")]),s._v(" 5. 类型声明文件 *.d.ts")]),s._v(" "),a("h4",{attrs:{id:"手写编写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手写编写"}},[s._v("#")]),s._v(" 手写编写")]),s._v(" "),a("p",[s._v("例如适配 Vue v2 版本的许多组件库都是手写的类型声明。")]),s._v(" "),a("h4",{attrs:{id:"自动生成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动生成"}},[s._v("#")]),s._v(" 自动生成")]),s._v(" "),a("p",[s._v("自动生成的前提就是你的组件库源代码要是用 TypeScript 写的。\n随着 ts 的生态越来越好，现在新版本的组件库基本都是用 ts 写的。")]),s._v(" "),a("h3",{attrs:{id:"如何实现按需加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何实现按需加载"}},[s._v("#")]),s._v(" 如何实现按需加载？")]),s._v(" "),a("p",[s._v("开发者一般会这么使用组件库，例如希望最后打包的时候只引入使用到的 "),a("code",[s._v("Button")]),s._v(" 组件的代码。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Button "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo-ui'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"babel-插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-插件"}},[s._v("#")]),s._v(" babel 插件")]),s._v(" "),a("p",[s._v("在构建工具对于 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Tree_shaking",target:"_blank",rel:"noopener noreferrer"}},[s._v("tree-shaking"),a("OutboundLink")],1),s._v(" 支持不好的情况下，一般会安装 "),a("a",{attrs:{href:"https://github.com/ant-design/babel-plugin-import",target:"_blank",rel:"noopener noreferrer"}},[s._v("babel 插件"),a("OutboundLink")],1),s._v("。曲线救国，间接实现只引入用到的组件。")]),s._v(" "),a("p",[s._v("原理其实就是在 babel 处理源代码的时候，将以上写法转换成直接引用对应组件")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Button "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'antd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nReactDOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Button"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("xxxx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("Button"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      ↓ ↓ ↓ ↓ ↓ ↓\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" _button "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'antd/lib/button'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nReactDOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("_button"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("xxxx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_button"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("甚至实现样式的按需加载")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"libraryName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"element-ui"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"styleLibraryDirectory"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lib/theme-chalk"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Button "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'element-ui'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      ↓ ↓ ↓ ↓ ↓ ↓\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" _button "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'element-ui/lib/button'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'element-ui/lib/theme-chalk/button'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("但其实除非你用的还是 webpack v1 版本，不然现在构建工具基本都支持 tree-shaking。")]),s._v(" "),a("h4",{attrs:{id:"js-部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-部分"}},[s._v("#")]),s._v(" js 部分")]),s._v(" "),a("p",[s._v("只要你用的是 import、export 而非 require 来编写组件库。")]),s._v(" "),a("blockquote",[a("p",[s._v('从 webpack v4 版本开始，通过 package.json 的 "sideEffects" 属性作为标记，向 compiler 提供提示，表明项目中的哪些文件是 "pure(纯正 ES2015 模块)"，由此可以安全地删除文件中未使用的部分。')])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your-project"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"sideEffects"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h4",{attrs:{id:"样式部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样式部分"}},[s._v("#")]),s._v(" 样式部分")]),s._v(" "),a("p",[s._v("纯 js 的 tree-shaking 思路还很明确清晰。但组件库中肯定会包含具有副作用的不纯的样式代码。")]),s._v(" "),a("p",[s._v("这时就需要在 "),a("code",[s._v('"sideEffects"')]),s._v(" 属性中标记这些有副作用的样式代码。")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your-project"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"sideEffects"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./src/some-side-effectful-file.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.css"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("想要了解更多可以看看 webpack 文档："),a("a",{attrs:{href:"https://webpack.docschina.org/guides/tree-shaking/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://webpack.docschina.org/guides/tree-shaking/"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("在加载样式方面，一般的组件库直接就打包成一个大 css 文件了，手动引入即可。\n更进一步有的组件库将每个组件的样式单独打包，但这样就需要手动引用各个组件对应的样式文件，或者借助 babel 插件，走代码转换的路子。\n但其实在构建出的 js 文件中直接 import 对应样式，就可以实现自动加载组件样式代码，并且在打包后也自动删除未引用到的组件样式代码。")]),s._v(" "),a("p",[s._v("但在实践中，发现 vite 对于 "),a("code",[s._v('"sideEffects"')]),s._v(" 这个属性似乎支持的不太好，默认将样式都标记为有副作用，于是我就顺便提了个 "),a("a",{attrs:{href:"https://github.com/vitejs/vite/issues/4389",target:"_blank",rel:"noopener noreferrer"}},[s._v("issue 4389"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"用什么构建工具-rollup-vs-webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用什么构建工具-rollup-vs-webpack"}},[s._v("#")]),s._v(" 用什么构建工具？rollup VS webpack？")]),s._v(" "),a("p",[s._v("先说结论：选 "),a("strong",[s._v("rollup")]),s._v("。")]),s._v(" "),a("blockquote",[a("p",[s._v("webpack 更适合对于应用的打包，rollup 更适合对于库的打包。")])]),s._v(" "),a("h4",{attrs:{id:"为什么不用-webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么不用-webpack"}},[s._v("#")]),s._v(" 为什么不用 webpack?")]),s._v(" "),a("p",[s._v("webpack "),a("strong",[s._v("无法构建出 esm 格式的 js 文件")]),s._v("。\n即使借助一些插件实现了（我没试过），产出代码也比不上 rollup 简洁、干净。")]),s._v(" "),a("h3",{attrs:{id:"项目文件结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目文件结构"}},[s._v("#")]),s._v(" 项目文件结构")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("├─ src\n│   ├─ foo-component\n│        ├─ __tests__/\n│        ├─ demos/\n│        ├─ style/\n│        ├─ foo-component.tsx\n│        ├─ index.ts\n│        └─ README.md\n├──── index.ts\n├─ ...\n├─ README.md\n└─ package.json\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h4",{attrs:{id:"foo-component-下导出文件说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#foo-component-下导出文件说明"}},[s._v("#")]),s._v(" "),a("code",[s._v("foo-component/")]),s._v(" 下导出文件说明")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("__tests__/")]),s._v(": 组件单测文件夹")]),s._v(" "),a("li",[a("code",[s._v("demos/")]),s._v(": 组件文档示例文件夹")]),s._v(" "),a("li",[a("code",[s._v("style/")]),s._v(": 组件样式文件夹")]),s._v(" "),a("li",[a("code",[s._v("foo-component.tsx")]),s._v(": 组件本体")]),s._v(" "),a("li",[a("code",[s._v("index.ts")]),s._v(": 组件入口，可用于添加一些通用逻辑（例如为组件添加 install 方法）")])]),s._v(" "),a("h4",{attrs:{id:"package-json-相关字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#package-json-相关字段"}},[s._v("#")]),s._v(" package.json 相关字段")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("module")]),s._v(": esm 格式的产物入口")]),s._v(" "),a("li",[a("code",[s._v("main")]),s._v(": cjs 格式的产物入口")]),s._v(" "),a("li",[a("code",[s._v("typings")]),s._v(": 类型声明的产物入口")]),s._v(" "),a("li",[a("code",[s._v("sideEffects")]),s._v(": 声明有副作用的代码，一般是样式")])]),s._v(" "),a("h3",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("本文从使用组件库的两种方式（script 标签和借助构建工具），说明有哪些构建产物类型以及如何实现 js 和样式的按需加载。")]),s._v(" "),a("p",[s._v("接着说明了为什么应该用 rollup 作为组件库的构建工具，并给出项目文件结构的示例和 package.json 中相关字段的说明。")]),s._v(" "),a("p",[s._v("希望本文能让读者对于组件库的构建有一个基本的概念和思路。下一部分将从实践方向详细介绍如何解决组件库构建过程中的各种问题和踩到的一些坑。")]),s._v(" "),a("p",[s._v("以上 to be continued...")]),s._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/umdjs/umd",target:"_blank",rel:"noopener noreferrer"}},[s._v("UMD (Universal Module Definition)"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Tree_shaking",target:"_blank",rel:"noopener noreferrer"}},[s._v("什么是 Tree shaking"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/ant-design/babel-plugin-import",target:"_blank",rel:"noopener noreferrer"}},[s._v("babel-plugin-import"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://webpack.docschina.org/guides/tree-shaking/",target:"_blank",rel:"noopener noreferrer"}},[s._v("用 webpack 实现 Tree shaking"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/vitejs/vite/issues/4389",target:"_blank",rel:"noopener noreferrer"}},[s._v("CSS files cannot be tree-shaken with side effects"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Using_CSS_custom_properties",target:"_blank",rel:"noopener noreferrer"}},[s._v("使用CSS自定义属性（变量）"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Modules",target:"_blank",rel:"noopener noreferrer"}},[s._v("JavaScript modules 模块"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://en.wikipedia.org/wiki/CommonJS",target:"_blank",rel:"noopener noreferrer"}},[s._v("cjs（Common JS）"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_V8.md#2017-09-12-version-850-current-mylesborins",target:"_blank",rel:"noopener noreferrer"}},[s._v("Node.js CHANGELOG_V8"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_V13.md#2019-11-21-version-1320-current-mylesborins",target:"_blank",rel:"noopener noreferrer"}},[s._v("Node.js CHANGELOG_V13"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=r.exports}}]);